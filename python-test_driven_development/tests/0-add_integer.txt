>>> add_integer = __import__('0-add_integer').add_integer

Positive integers

.. code-block:: python

    >>> print(add_integer(4, 3))
    7

    >>> print(add_integer(3, 4))
    7

Positive Floats

.. code-block:: python

    >>> print(add_integer(4.4, 5))
    9

    >>> print(add_integer(5, 4.4))
    9

Negative integers

.. code-block:: python

    >>> print(add_integer(-4, 5))
    1

    >>> print(add_integer(5, -4))
    1

    >>> print(add_integer(-4, -5))
    -9

String inputs

.. code-block:: python

    >>> print(add_integer("4", 5))
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> print(add_integer(5, "4"))
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> print(add_integer("Hello", -5))
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> print(add_integer("Hello", "World"))
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> print(add_integer(5, "Hello"))
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> print(add_integer(None))
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> print(add_integer(None, 4))
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> print(add_integer(4, None))
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> print(add_integer(True, 4))
    5

    >>> print(add_integer(False, 4))
    4

    >>> print(add_integer(4, True))
    5

    >>> print(add_integer(4, False))
    4
