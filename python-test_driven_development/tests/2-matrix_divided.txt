>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Integers

.. code-block:: python

    >>> matrix_divided([[1, 1], [1, 1]], 1)
    [[1.0, 1.0], [1.0, 1.0]]

    >>> matrix_divided([[4, 8], [16, 32]], 2)
    [[2.0, 4.0], [8.0, 16.0]]

    >>> matrix_divided([[50]], 10)
    [[5.0]]

Floats

.. code-block:: python

    >>> matrix_divided([[1.1, 1.1], [1.2, 1.2]], 1.3)
    [[0.85, 0.85], [0.92, 0.92]]

    >>> matrix_divided([[4.3, 8.4], [16.1, 32.2]], 2.2)
    [[1.95, 3.82], [7.32, 14.64]]

    >>> matrix_divided([[50.0]], 10.4)
    [[4.81]]

Errors

.. code-block:: python

    >>> matrix_divided([[1.1, None], [1.2, 1.2]], 1.3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[4.3, "Hello"], [16.1, 32.2]], 2.2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[4.3], [16.1, 32.2]], 2.2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[4.3, 3], [16.1, 32.2]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    >>> matrix_divided([[4.3, 3], [16.1, 32.2]], None)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number
